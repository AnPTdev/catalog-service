<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="116af502-9a6c-4b64-ac83-0beaeadba029" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/api/src/server/utils/Validations.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/server/DatabaseHelper.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/server/DatabaseHelper.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/server/Routes.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/server/Routes.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/server/ServerHelper.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/server/ServerHelper.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/src/server/controllers/CategoryController.ts" beforeDir="false" afterPath="$PROJECT_DIR$/api/src/server/controllers/CategoryController.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FormatOnSaveOptions">
    <option name="myRunOnSave" value="false" />
    <option name="myAllFileTypesSelected" value="true" />
    <option name="mySelectedFileTypes">
      <set />
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2easSHhj18cPFPwpdlyJs4YB3LK" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "master",
    "javascript.nodejs.core.library.configured.version": "18.16.1",
    "javascript.nodejs.core.library.typings.version": "18.16.1",
    "last_opened_file_path": "/Users/an.pham/workspaces/catalog-service",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "ts.external.directory.path": "/Applications/IntelliJ IDEA.app/Contents/plugins/javascript-impl/jsLanguageServicesImpl/external",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/api/prisma/" />
      <recent name="$PROJECT_DIR$/api/src/server" />
      <recent name="$PROJECT_DIR$/database/sql" />
      <recent name="$PROJECT_DIR$/api" />
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="RunManager" selected="Docker.api.flyway_catalog_db: Compose Deployment">
    <configuration default="true" type="JetRunConfigurationType">
      <module name="catalog-service" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
      <module name="catalog-service" />
      <option name="filePath" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="prepare (1)" type="MAKEFILE_TARGET_RUN_CONFIGURATION" factoryName="Makefile" temporary="true">
      <makefile filename="$PROJECT_DIR$/makefile" target="prepare" workingDirectory="" arguments="">
        <envs />
      </makefile>
      <method v="2" />
    </configuration>
    <configuration name="start/local" type="MAKEFILE_TARGET_RUN_CONFIGURATION" factoryName="Makefile" temporary="true">
      <makefile filename="$PROJECT_DIR$/api/Makefile" target="start/local" workingDirectory="" arguments="">
        <envs />
      </makefile>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="api: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="api/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="api.flyway_catalog_db: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="flyway_catalog_db" />
            </list>
          </option>
          <option name="sourceFilePath" value="api/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="api.postgres: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="postgres" />
            </list>
          </option>
          <option name="sourceFilePath" value="api/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.api.flyway_catalog_db: Compose Deployment" />
        <item itemvalue="Docker.api.postgres: Compose Deployment" />
        <item itemvalue="Docker.api: Compose Deployment" />
        <item itemvalue="Makefile Target.start/local" />
        <item itemvalue="Makefile Target.prepare (1)" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="116af502-9a6c-4b64-ac83-0beaeadba029" name="Changes" comment="" />
      <created>1712154021364</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1712154021364</updated>
      <workItem from="1712154022391" duration="21392000" />
      <workItem from="1712668850914" duration="4075000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>